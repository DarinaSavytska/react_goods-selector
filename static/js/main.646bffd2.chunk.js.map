{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","prevGood","deleteGood","filter","delGood","clearSelection","length","slice","join","this","className","map","type","classNames","includes","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAe,CACbC,cAAe,CAAC,Q,EAGlBC,QAAU,SAACC,GAAD,OACR,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACzBJ,cAAc,GAAD,mBAAMI,EAASJ,eAAf,CAA8BE,S,EAI/CG,WAAa,SAACH,GAAD,OACX,EAAKC,UAAS,SAAAC,GAAQ,MAAK,CACzBJ,cAAeI,EAASJ,cAAcM,QAAO,SAAAC,GAAO,OAAIA,IAAYL,U,EAIxEM,eAAiB,kBACf,EAAKL,SACH,CAAEH,cAAe,M,EAIrBA,cAAgB,WACd,IAAQA,EAAkB,EAAKD,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBAET,KAAK,EACH,MAAM,GAAN,OAAUT,EAAV,gBAEF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcU,OAAO,GAA5E,mB,4CAIN,WAAU,IAAD,OACCV,EAAkBY,KAAKb,MAAvBC,cAER,OACE,sBAAKa,UAAU,MAAf,UACE,mBAAGA,UAAU,aAAb,sBAGA,oBAAIA,UAAU,mBAAd,SACGD,KAAKZ,kBAGPH,EAAgBiB,KAAI,SAACZ,GACpB,OACE,8BACE,qBAEEW,UAAU,YAFZ,UAIGX,EACD,wBACEa,KAAK,SACLF,UAAWG,IAAW,cACpB,CAAE,wBAAyBhB,EAAciB,SAASf,KACpDgB,QAASlB,EAAciB,SAASf,GAC5B,kBAAM,EAAKG,WAAWH,IACtB,kBAAM,EAAKD,QAAQC,IANzB,SAQGF,EAAciB,SAASf,GAAQ,SAAW,eAZxCA,QAmBb,wBACEa,KAAK,SACLF,UAAU,oBACVK,QAASN,KAAKJ,eAHhB,8B,GAzEUW,IAAMC,WAqFTtB,ICvGfuB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.646bffd2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[],\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedGoods: ['Jam'],\n  };\n\n  addGood = (good: string) => (\n    this.setState(prevGood => ({\n      selectedGoods: [...prevGood.selectedGoods, good],\n    }))\n  );\n\n  deleteGood = (good: string) => (\n    this.setState(prevGood => ({\n      selectedGoods: prevGood.selectedGoods.filter(delGood => delGood !== good),\n    }))\n  );\n\n  clearSelection = () => (\n    this.setState(\n      { selectedGoods: [] },\n    )\n  );\n\n  selectedGoods = () => {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n\n      case 1:\n        return `${selectedGoods} is selected`;\n\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__notes\">\n          My notes\n        </p>\n        <h1 className=\"App__title-goods\">\n          {this.selectedGoods()}\n        </h1>\n\n        {goodsFromServer.map((good) => {\n          return (\n            <div>\n              <li\n                key={good}\n                className=\"App__good\"\n              >\n                {good}\n                <button\n                  type=\"button\"\n                  className={classNames('App__button',\n                    { 'App__button--selected': selectedGoods.includes(good) })}\n                  onClick={selectedGoods.includes(good)\n                    ? () => this.deleteGood(good)\n                    : () => this.addGood(good)}\n                >\n                  {selectedGoods.includes(good) ? 'Remove' : 'Selected'}\n                </button>\n              </li>\n            </div>\n          );\n        })}\n\n        <button\n          type=\"button\"\n          className=\"App__clear-button\"\n          onClick={this.clearSelection}\n        >\n          Clear All\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}